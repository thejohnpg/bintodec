{"ast":null,"code":"import _slicedToArray from \"/Users/tbb/Documents/John/Bin2Dec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tbb/Documents/John/Bin2Dec/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"animate.css\";\nimport './index.css';\nimport { StyledForm, BinaryTextInput, Label, Button, DecimalTextInput, Field } from './styles';\n\nfunction App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      binaryText = _useState2[0],\n      setBinaryText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      decimalText = _useState4[0],\n      setDecimalText = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1]; // Perform the conversion on form submit\n\n\n  var onFormSubmit = function onFormSubmit(e) {\n    e.preventDefault(); // prevents refresh of the browser\n    // Make sure we accept only either 0 or 1\n\n    if (binaryText.match(/^[0-1]+$/g) === null) {\n      setErrorMessage('Insira 0 ou 1');\n      return;\n    }\n\n    setErrorMessage(''); // Reset the error message\n    // Formulae:\n    // input = 1 => output = 1 * (2^0) = 1\n    // input = 10 => output = (0 * (2^0)) + (1 * (2^1)) = 2\n    // So we reverse and iterate from the back\n\n    var reversedBinaryText = binaryText.split('').map(Number) // Convert to a number from string\n    .reverse(); // Calculate the result by accumulating previous vaue\n\n    var result = reversedBinaryText.reduce(function (accumulator, currentValue, idx) {\n      return accumulator + currentValue * Math.pow(2, idx);\n    });\n    setDecimalText(result);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"animate__bounceIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \" Convers\\xE3o Bin\\xE1rio para Decimal \"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"Converta n\\xFAmeros bin\\xE1rios, com at\\xE9 8 digitos, para n\\xFAmeros decimais.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animate__bounceIn container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Insira o n\\xFAmero bin\\xE1rio\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BinaryTextInput, {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"binary\",\n    placeholder: \"Ex: 010001\",\n    value: binaryText,\n    onChange: function onChange(e) {\n      return setBinaryText(e.target.value);\n    } // type=\"number\"\n    ,\n    maxLength: 8,\n    onKeyPress: function onKeyPress(event) {\n      if (!/[0-9]/.test(event.key)) {\n        event.preventDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Converter\"))), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Resultado n\\xFAmero decimal\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"result-decimal\",\n    type: \"number\",\n    name: \"decimal\",\n    value: decimalText,\n    className: \"btn-result\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-clipboard-action\": \"copy\",\n    \"data-clipboard-target\": \"#result-decimal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Copiar\"), errorMessage && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 24\n    }\n  }, errorMessage)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Copyright - 2021\")));\n}\n\nvar rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/tbb/Documents/John/Bin2Dec/src/index.js"],"names":["React","useState","ReactDOM","StyledForm","BinaryTextInput","Label","Button","DecimalTextInput","Field","App","binaryText","setBinaryText","decimalText","setDecimalText","errorMessage","setErrorMessage","onFormSubmit","e","preventDefault","match","reversedBinaryText","split","map","Number","reverse","result","reduce","accumulator","currentValue","idx","Math","pow","target","value","event","test","key","color","textAlign","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport \"animate.css\";\n\nimport './index.css';\n\nimport {\n  StyledForm,\n  BinaryTextInput,\n  Label,\n  Button,\n  DecimalTextInput,\n  Field\n} from './styles'\n\nfunction App() {\n  const [binaryText, setBinaryText] = useState('')\n  const [decimalText, setDecimalText] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  // Perform the conversion on form submit\n  const onFormSubmit = e => {\n    e.preventDefault() // prevents refresh of the browser\n\n    // Make sure we accept only either 0 or 1\n    if (binaryText.match(/^[0-1]+$/g) === null) {\n      setErrorMessage('Insira 0 ou 1')\n      return\n    }\n\n    setErrorMessage('') // Reset the error message\n\n    // Formulae:\n    // input = 1 => output = 1 * (2^0) = 1\n    // input = 10 => output = (0 * (2^0)) + (1 * (2^1)) = 2\n    // So we reverse and iterate from the back\n    const reversedBinaryText = binaryText\n      .split('')\n      .map(Number) // Convert to a number from string\n      .reverse()\n\n    // Calculate the result by accumulating previous vaue\n    const result = reversedBinaryText.reduce(\n      (accumulator, currentValue, idx) =>\n        accumulator + currentValue * Math.pow(2, idx)\n    )\n    setDecimalText(result)\n  }\n\n  return (\n    <>\n\n    <h1 className=\"animate__bounceIn\"> Conversão Binário para Decimal </h1>\n    <h2>Converta números binários, com até 8 digitos, para números decimais.</h2>\n    <div className=\"animate__bounceIn container\">\n    <StyledForm onSubmit={onFormSubmit}>\n      <br />\n      <Field>\n        <Label>Insira o número binário</Label>\n        <div>\n          <BinaryTextInput\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"binary\"\n            placeholder=\"Ex: 010001\"\n            value={binaryText}\n            onChange={e => setBinaryText(e.target.value)}\n            // type=\"number\"\n            maxLength={8}\n            onKeyPress={(event) => {\n              if (!/[0-9]/.test(event.key)) {\n                event.preventDefault();\n              }\n            }}\n          />\n          <Button type=\"submit\" className=\"button\">Converter</Button>\n        </div>\n      </Field>\n      <Field>\n        <Label>Resultado número decimal</Label>\n\n        <textarea \n        id=\"result-decimal\"\n        type=\"number\"\n        name=\"decimal\"\n        value={decimalText}\n        className=\"btn-result\"\n        disabled\n        />\n        {/* <DecimalTextInput\n          id=\"result-decimal\"\n          type=\"text\"\n          name=\"decimal\"\n          value={decimalText}\n          className=\"btn-result\"\n          disabled\n        /> */}\n        <button data-clipboard-action=\"copy\" data-clipboard-target=\"#result-decimal\">\n            Copiar\n          </button>\n      {errorMessage && <span style={{ color: 'red', textAlign: 'center' }}>{errorMessage}</span>}\n\n      </Field>\n    </StyledForm>\n    </div>\n\n    <div className=\"footer\">\n      <span>Copyright - 2021</span>\n    </div>\n\n    </>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"]},"metadata":{},"sourceType":"module"}