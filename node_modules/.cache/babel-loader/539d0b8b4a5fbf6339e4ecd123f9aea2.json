{"ast":null,"code":"import _slicedToArray from \"/Users/tbb/Documents/John/Bin2Dec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tbb/Documents/John/Bin2Dec/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Helmet from \"react-helmet\";\nimport \"animate.css\";\nimport alertify from 'alertifyjs';\nimport './index.css';\nimport { StyledForm, BinaryTextInput, Label, Button, DecimalTextInput, Field } from './styles';\n\nfunction App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      binaryText = _useState2[0],\n      setBinaryText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      decimalText = _useState4[0],\n      setDecimalText = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var copyToClipboard = function copyToClipboard(e) {\n    e.preventDefault();\n    navigator.clipboard.writeText(decimalText);\n    alertify.message(\"Resultado \".concat(decimalText, \" copiado com sucesso\"));\n  }; // Perform the conversion on form submit\n\n\n  var onFormSubmit = function onFormSubmit(e) {\n    e.preventDefault(); // prevents refresh of the browser\n    // Make sure we accept only either 0 or 1\n\n    if (binaryText.match(/^[0-1]+$/g) === null) {\n      setErrorMessage('Insira 0 ou 1');\n      return;\n    }\n\n    setErrorMessage(''); // Reset the error message\n    // Formulae:\n    // input = 1 => output = 1 * (2^0) = 1\n    // input = 10 => output = (0 * (2^0)) + (1 * (2^1)) = 2\n    // So we reverse and iterate from the back\n\n    var reversedBinaryText = binaryText.split('').map(Number) // Convert to a number from string\n    .reverse(); // Calculate the result by accumulating previous vaue\n\n    var result = reversedBinaryText.reduce(function (accumulator, currentValue, idx) {\n      return accumulator + currentValue * Math.pow(2, idx);\n    });\n    setDecimalText(result);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    charSet: \"utf-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Conversao de Bin\\xE1rio para Decimal - Bin2Dec \"), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Aplica\\xE7\\xE3o para converter n\\xFAmeros bin\\xE1rios para n\\xFAmeros decimais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"animate__bounceIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, \" Convers\\xE3o Bin\\xE1rio para Decimal \"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Converta n\\xFAmeros bin\\xE1rios, com at\\xE9 8 digitos, para n\\xFAmeros decimais.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animate__bounceIn container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Insira o n\\xFAmero bin\\xE1rio\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BinaryTextInput, {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"binary\",\n    placeholder: \"Ex: 010001\",\n    value: binaryText,\n    onChange: function onChange(e) {\n      return setBinaryText(e.target.value);\n    } // type=\"number\"\n    ,\n    maxLength: 8,\n    onKeyPress: function onKeyPress(event) {\n      if (!/[0-9]/.test(event.key)) {\n        event.preventDefault();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Converter\"))), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Resultado n\\xFAmero decimal\"), /*#__PURE__*/React.createElement(DecimalTextInput, {\n    id: \"result-decimal\",\n    type: \"text\",\n    name: \"decimal\",\n    value: decimalText,\n    className: \"btn-result\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-copy-to-clipboard\",\n    onClick: copyToClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Copiar\"), errorMessage && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 24\n    }\n  }, errorMessage)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Copyright - 2021\")));\n}\n\nvar rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/tbb/Documents/John/Bin2Dec/src/index.js"],"names":["React","useState","ReactDOM","Helmet","alertify","StyledForm","BinaryTextInput","Label","Button","DecimalTextInput","Field","App","binaryText","setBinaryText","decimalText","setDecimalText","errorMessage","setErrorMessage","copyToClipboard","e","preventDefault","navigator","clipboard","writeText","message","onFormSubmit","match","reversedBinaryText","split","map","Number","reverse","result","reduce","accumulator","currentValue","idx","Math","pow","target","value","event","test","key","color","textAlign","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Helmet from \"react-helmet\";\nimport \"animate.css\";\n\nimport alertify from 'alertifyjs';\n\nimport './index.css';\n\nimport {\n  StyledForm,\n  BinaryTextInput,\n  Label,\n  Button,\n  DecimalTextInput,\n  Field\n} from './styles'\n\nfunction App() {\n  const [binaryText, setBinaryText] = useState('')\n  const [decimalText, setDecimalText] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const copyToClipboard = e => {\n    e.preventDefault();\n    navigator.clipboard.writeText(decimalText);\n\n    alertify.message(`Resultado ${decimalText} copiado com sucesso`);\n  }\n\n  // Perform the conversion on form submit\n  const onFormSubmit = e => {\n    e.preventDefault() // prevents refresh of the browser\n\n    // Make sure we accept only either 0 or 1\n    if (binaryText.match(/^[0-1]+$/g) === null) {\n      setErrorMessage('Insira 0 ou 1')\n      return\n    }\n\n    setErrorMessage('') // Reset the error message\n\n    // Formulae:\n    // input = 1 => output = 1 * (2^0) = 1\n    // input = 10 => output = (0 * (2^0)) + (1 * (2^1)) = 2\n    // So we reverse and iterate from the back\n    const reversedBinaryText = binaryText\n      .split('')\n      .map(Number) // Convert to a number from string\n      .reverse()\n\n    // Calculate the result by accumulating previous vaue\n    const result = reversedBinaryText.reduce(\n      (accumulator, currentValue, idx) =>\n        accumulator + currentValue * Math.pow(2, idx)\n    )\n    setDecimalText(result)\n  }\n\n  return (\n    <>\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>Conversao de Binário para Decimal - Bin2Dec </title>\n      <meta name=\"description\" content=\"Aplicação para converter números binários para números decimais\" />\n    </Helmet>\n   \n\n    <h1 className=\"animate__bounceIn\"> Conversão Binário para Decimal </h1>\n    <h2>Converta números binários, com até 8 digitos, para números decimais.</h2>\n\n\n    <div className=\"animate__bounceIn container\">\n\n    <StyledForm onSubmit={onFormSubmit}>\n      <br />\n      <Field>\n        <Label>Insira o número binário</Label>\n        <div>\n          <BinaryTextInput\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"binary\"\n            placeholder=\"Ex: 010001\"\n            value={binaryText}\n            onChange={e => setBinaryText(e.target.value)}\n            // type=\"number\"\n            maxLength={8}\n            onKeyPress={(event) => {\n              if (!/[0-9]/.test(event.key)) {\n                event.preventDefault();\n              }\n            }}\n          />\n          <Button type=\"submit\" className=\"button\">Converter</Button>\n        </div>\n      </Field>\n      <Field>\n        <Label>Resultado número decimal</Label>\n\n        <DecimalTextInput\n          id=\"result-decimal\"\n          type=\"text\"\n          name=\"decimal\"\n          value={decimalText}\n          className=\"btn-result\"\n          disabled\n        />\n        <button className=\"btn-copy-to-clipboard\" onClick={copyToClipboard}>\n            Copiar\n          </button>\n      {errorMessage && <span style={{ color: 'red', textAlign: 'center' }}>{errorMessage}</span>}\n\n      </Field>\n    </StyledForm>\n\n    </div>\n\n    <div className=\"footer\">\n      <span>Copyright - 2021</span>\n    </div>\n    </>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"]},"metadata":{},"sourceType":"module"}